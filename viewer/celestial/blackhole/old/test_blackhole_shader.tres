[gd_resource type="Shader" format=2]

[resource]
code = "shader_type spatial;
render_mode unshaded;

void vertex() {
	MODELVIEW_MATRIX = INV_CAMERA_MATRIX * mat4(CAMERA_MATRIX[0],CAMERA_MATRIX[1],CAMERA_MATRIX[2],WORLD_MATRIX[3]);
}

void fragment() {
	const vec2 center = vec2(0.5, 0.5);
	
	vec2 coord = 2.0 * (UV.xy - center);
	
	float dist = sqrt(coord.x * coord.x + coord.y * coord.y);
	
	float depth = sqrt(1.0 - dist * dist);
	
	vec3 normal = normalize(vec3(coord.x, -coord.y, depth));
	
	if (dist > 1.0) {
		discard;
	}
	
	float fresnel = 1.0 - dot(normal, VIEW);
	
	ALBEDO = vec3(normal);
}"
